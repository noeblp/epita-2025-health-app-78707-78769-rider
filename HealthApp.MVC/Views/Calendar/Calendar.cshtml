@using System.Globalization
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Calendrier Dynamique";
    int year = ViewBag.CurrentYear;
    int month = ViewBag.CurrentMonth;
    int week = ViewBag.CurrentWeek;
    var events = ViewBag.Events as List<hospital.Models.Calendar>;
    var startOfWeek = ViewBag.StartOfWeek as DateTime? ?? DateTime.Now;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>

<div class="d-flex justify-content-between align-items-center mb-4 px-4">
    
        <a class="btn btn-outline-primary fw-bold" asp-controller="Doctor" asp-action="HomeDoctor">
            <i class="fa-solid fa-stethoscope"></i> Home
        </a>
    
    

    <h2 class="text-center text-primary fw-bold">
        Week of @startOfWeek.ToString("dd MMMM yyyy", new CultureInfo("en-US"))
    </h2>

    <div></div> <!-- just to balance the flex layout -->
</div>

<div class="container">
    <div class="table-responsive">
        <table class="table table-bordered text-center align-middle shadow-sm">
            <thead class="table-light">
                <tr>
                    <th style="width: 8%"></th>
                    @for (int i = 0; i < 7; i++)
                    {
                        <th class="fw-bold" style="width: 13%;">
                            @startOfWeek.AddDays(i).ToString("dddd", new CultureInfo("en-US")) <br />
                            <span class="text-muted">@startOfWeek.AddDays(i).ToString("dd MMM", new CultureInfo("en-US"))</span>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @for (int hour = 8; hour <= 18; hour++)
                {
                    <tr>
                        <td class="bg-light fw-bold">@hour:00</td>
                        @for (int i = 0; i < 7; i++)
                        {
                            var currentDate = startOfWeek.AddDays(i);
                            var eventToday = events?.Where(e => e.Date.Date == currentDate.Date && e.Date.Hour == hour).ToList();
                            <td style="position: relative;">
                                @if (eventToday != null && eventToday.Any())
                                {
                                    foreach (var evt in eventToday)
                                    {
                                        <div class="event-card">
                                            
                                            <strong>@evt.Title</strong>
                                        </div>
                                    }
                                }
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="d-flex justify-content-between mt-4 px-4">
    <a class="btn btn-outline-secondary" href="@Url.Action("Calendar", new { year = year, month = month, week = week - 1 })">
        ← Previous week
    </a>
    <a class="btn btn-outline-secondary" href="@Url.Action("Calendar", new { year = year, month = month, week = week + 1 })">
        Next week →
    </a>
</div>

<style>
    .event-card {
        background: linear-gradient(to right, #4facfe, #00f2fe);
        color: white;
        padding: 8px;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-size: 0.9rem;
        transition: transform 0.2s ease-in-out;
        cursor: pointer;
        margin-top: 5px;
    }

    .event-card:hover {
        transform: scale(1.05);
    }

    th, td {
        vertical-align: top;
    }

    
</style>
